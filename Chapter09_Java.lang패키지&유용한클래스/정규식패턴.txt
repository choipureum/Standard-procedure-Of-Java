<정규식 선언>
  1.Pattern p =new Pattern.compile("정규식");
  2.Matcher m= p.matcher(비교문자열);
  3.if(m.match()) : match를 통해서 맞는지 
   +정규식은 괄호를 통해 그룹화가 가능하다
    ex)String pattern = "(0\\d{1,2})-(\\d{3,4})-(\\d{4})";
  
 <정규식 패턴>
  -c[a-z] : c로 시작하는 영단어 2글자(c와 소문자알파벳)
  -c[a-z]* : c+영어소문자 그다음 아무거나(길든짧든)
  -c[a-zA-Z0-9] : c로 시작하고 영단어나 숫자 아무거나 두글자만되게
  -.* : 모든 문자열
  -c. : c로 시작하는 두글자
  -c.* : c로 시작하는 모든 문자열
  -c.*t : c로 시작하고 t로 끝나는 모든 문자열
  -[bc].* : b나 c로 시작하는 문자열
  -[^bc].* : b나c로 시작하지 않는 문자열
  -.*a.* : 중간에 a를 포함하는 모든 문자열
  -.*a.+ : 중간에 a를 포함하는 문자열 이지만 +는 *과 달리 공백은 포함 x무조건 1개가 들어가야함
      즉 dea 등은 포함하지 않음
  -[b|c].{3} : b또는 c로 시작하는 4자리 문자열(b나c하나 +  뒤에 3개)
  
  
  <추가 함수>
  m.group(int idx) : 그룹화된 부분을 호출가능 맨 앞은  1부터 시작
  m.find() : 일치하는 패턴이 없으면 false반환, 있으면 true반환
  m.start() , m.end() : 정규식과 일치하는 부분을 찾으면 시작점과 끝의 인덱스 반환
  m.appendReplacement(sb, "바꿀문자열") : 처음부터 바꾼 곳까지 스트링 버퍼에 추가(정규식과 같은 곳은 바꿀문자열로 치환되서 저장)
  m.appendTail(sb) : 스트링 버퍼에 치환된 이후의 부분을 저장한다
  
